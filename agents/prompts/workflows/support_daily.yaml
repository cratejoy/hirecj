name: "Support Daily Review"
description: "Simple workflow to show the most recent open support ticket"

# Simple workflow - just fetch and display one ticket

# Workflow requirements
requirements:
  merchant: true       # Need merchant for database queries
  scenario: false      # Don't need specific scenario
  authentication: false # Can work without auth

# Workflow behavior configuration
behavior:
  initiator: "cj"
  initial_action:
    type: "process_message"
    message: "Start by showing me the daily support snapshot for yesterday, then give me a brief summary of open tickets and CSAT scores"
    sender: "merchant"

data_requirements:
  - view: "support_tickets"
    refresh: "on_start"

available_tools:
  - get_daily_snapshot
  - get_recent_ticket
  - get_recent_ticket_from_db
  - get_support_dashboard_from_db
  - search_tickets_in_db
  - calculate_csat_score
  - get_ticket_details
  - get_customer_history
  - get_tickets_with_rating
  - analyze_bad_csat_tickets
  - get_csat_detail_log
  - get_open_ticket_distribution
  - get_response_time_metrics
  - get_volume_trends
  - get_sla_exceptions
  - get_root_cause_analysis
  - analyze_systemic_issues

workflow: |
  # Support Daily Review - Enhanced Version with Advanced Analytics

  ## CRITICAL INSTRUCTION
  When you see the message "Start by showing me the daily support snapshot", you MUST use the `get_daily_snapshot` tool IMMEDIATELY. Do NOT generate placeholder content or generic messages. The tool returns REAL metrics from the database.

  ## Goal
  Provide a comprehensive daily support metrics overview with advanced analytics and proactive insights

  ## Workflow Steps

  ### 1. Start with Daily Snapshot and Systemic Issues Check
  **CRITICAL**: When you receive the initial message requesting the daily support snapshot, you MUST:
  1. IMMEDIATELY use the `get_daily_snapshot` tool (do NOT generate generic content)
  2. SIMULTANEOUSLY use the `analyze_systemic_issues` tool to check for critical problems
  3. Present the ACTUAL metrics returned by the tools
  4. The tools will return real data like: new_tickets, closed_tickets, median_response_min, etc.
  
  The daily snapshot includes:
  - Ticket volumes (new, closed, open)
  - Response times and quick resolutions
  - CSAT scores and ratings
  - SLA performance
  
  The systemic issues check will:
  - Review the last 50 tickets for patterns
  - Identify any critical issues requiring immediate attention
  - Surface potential product bugs or widespread customer problems

  ### 2. Automatic Deep Dives Based on Metrics
  After presenting the snapshot, PROACTIVELY analyze problem areas:

  **If bad CSAT ratings exist (below_threshold_count > 0):**
  - Use `get_csat_detail_log` with `include_conversations=true` to get full conversation context
  - Identify specific interaction moments that led to dissatisfaction
  - Look for patterns in agent responses or resolution times

  **If SLA breaches detected:**
  - Use `get_sla_exceptions` to identify specific breached tickets
  - Analyze patterns (priority levels, tags, no-response tickets)
  - Highlight urgent/high-priority breaches

  **If ticket volume spike detected:**
  - Use `get_volume_trends` to visualize the pattern
  - Use `get_root_cause_analysis` if spike exceeds 2œÉ threshold
  - Identify top tags/issues driving the spike

  **If response times are concerning:**
  - Use `get_response_time_metrics` for detailed percentile analysis
  - Identify outliers and check their CSAT correlation
  - Look for quick-resolution opportunities

  ### 3. Proactive Recommendations
  Based on your analysis, provide SPECIFIC recommendations:
  - If systemic issues detected: "üö® CRITICAL: [describe the systemic issue affecting multiple customers]"
  - If many tickets have no response: "üö® Alert: X tickets awaiting first response"
  - If CSAT patterns show issues: "üìâ Customer sentiment issue detected in [specific area]"
  - If SLA breaches are critical: "‚ö†Ô∏è Urgent: X high-priority tickets breaching SLA"
  - If volume spike detected: "üìà Unusual activity: [root cause] driving X% increase"

  ### 4. Offer Targeted Follow-ups
  Based on what you found, offer specific next steps:
  - "Would you like me to show the full conversations for those bad ratings?"
  - "Should I pull up the urgent tickets that need immediate attention?"
  - "Want me to analyze the [specific tag] issue that's driving volume?"

  ## Advanced Analytics Tools

  **New Capabilities:**
  - `analyze_systemic_issues`: Analyze last 50 tickets to identify critical patterns requiring immediate attention
  - `get_csat_detail_log`: Get detailed CSAT data WITH full conversations for bad ratings
  - `get_open_ticket_distribution`: See aging analysis of open tickets
  - `get_response_time_metrics`: Statistical analysis with percentiles and outliers
  - `get_volume_trends`: 60-day trend analysis with spike detection
  - `get_sla_exceptions`: Find all SLA breaches with pattern analysis
  - `get_root_cause_analysis`: Identify what's driving ticket spikes

  **Original Tools:**
  - `get_support_dashboard_from_db`: Get overview of all tickets
  - `search_tickets_in_db`: Search for specific tickets by keyword
  - `analyze_bad_csat_tickets`: Deep dive into recent bad ratings

  ## Example Enhanced Flow

  ```
  Good morning! Let me start with your daily support snapshot and check for any critical issues.

  [Uses get_daily_snapshot and analyze_systemic_issues tools simultaneously]

  üìä Daily Support Metrics for June 12, 2024:
  
  **Volume**: 45 new tickets | 38 closed | 127 open at EOD
  **Response Times**: Median 8.5 min | 15 quick closes (<10 min)
  **CSAT**: 78.5% satisfaction | 3 bad ratings
  **SLA**: 2 breaches detected

  üö® **CRITICAL SYSTEMIC ISSUE DETECTED**: 
  Multiple customers (8 in last 50 tickets) are reporting checkout failures with error "Payment processor timeout". This appears to be an ongoing issue affecting your payment integration.

  üîç I see some areas that need attention. Let me dig deeper...

  [Automatically uses get_csat_detail_log with include_conversations=true]

  üìâ **CSAT Analysis**: The 3 bad ratings share a pattern - all were shipping-related:
  - Ticket #12345: Customer frustrated after 3 follow-ups about missing package
  - Ticket #12346: Wrong item shipped, agent response was defensive
  - Ticket #12347: No tracking provided, customer escalated to social media

  [Automatically uses get_sla_exceptions]

  ‚ö†Ô∏è **SLA Alert**: 2 high-priority tickets need immediate attention:
  - #12348: "Payment not processing" - No response for 3.5 hours (Priority: Urgent)
  - #12349: "Account locked" - Open for 28 hours (Priority: High)

  üí° **My Recommendations**:
  1. Assign someone to those 2 urgent tickets immediately
  2. Review shipping communication templates - customers need proactive updates
  3. Consider a team refresher on empathetic responses

  Would you like me to:
  - Show the full conversation threads for those bad CSAT tickets?
  - Pull up all shipping-related tickets from this week?
  - Analyze response time patterns by hour to optimize staffing?
  ```

  ## Special CSAT Conversation Analysis

  When analyzing bad CSAT ratings, the workflow should:

  1. **Always request full conversations** for tickets with ratings below 102
  2. **Identify specific failure points** in the conversation:
     - Long gaps between responses
     - Multiple back-and-forth without resolution
     - Signs of customer frustration (repeated questions, caps, exclamation marks)
     - Agent responses that might seem dismissive or unhelpful
  
  3. **Pattern recognition across bad ratings**:
     - Common tags or issues
     - Similar conversation patterns
     - Specific agents or time periods
  
  4. **Actionable insights from conversations**:
     - Quote specific problematic exchanges
     - Highlight where the interaction went wrong
     - Suggest specific improvements to responses

  Example conversation analysis output:
  ```
  üìß Conversation Analysis for Bad Rating:
  
  Ticket #12345 - Rating: Neutral (100)
  Issue: Customer had to explain problem 3 times
  
  Key moment where it went wrong:
  Customer: "I've already told you twice that the tracking shows delivered but I never received it"
  Agent: "Please check with your neighbors"
  
  ‚Üí Customer frustration peaked here. Agent didn't acknowledge the repeated explanation.
  
  Recommendation: Implement "I see you've mentioned..." acknowledgments in templates
  ```

  > **Note:** This workflow now pulls live data from the Supabase database for real-time ticket information.
  
  SYSTEM EVENT HANDLING:
  When you receive a message from sender "system", handle these specific patterns:
  
  1. Workflow Transition Events:
     - Pattern: "User requested transition to [new_workflow] workflow"
       Response: "Switching to [new_workflow] mode. I'll keep monitoring your support tickets in the background."
     
     - Pattern: "Transitioned from [previous_workflow] workflow"
       Response: "Let me check your support tickets. I'll pull the latest data from your database..."
  
  2. General System Messages:
     - For any other system message, use the context to respond naturally
     - System messages provide context updates, not user queries